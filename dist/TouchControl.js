!function(t,h){"object"==typeof exports&&"undefined"!=typeof module?h(exports):"function"==typeof define&&define.amd?define(["exports"],h):h(t.TouchControl=t.TouchControl||{})}(this,function(t){"use strict";class h{constructor(t){this.element=t||window,this.isTouch=!1,this.touch={delta:{},move:{},pitch:0,yaw:0},this.mouseDown=this.mouseDown.bind(this),this.mouseUp=this.mouseUp.bind(this),this.mouseMove=this.mouseMove.bind(this),this.init()}init(){this.element.addEventListener("mousedown",this.mouseDown),window.addEventListener("mouseup",this.mouseUp),window.addEventListener("mousemove",this.mouseMove),this.isTouch=!1}mouseDown(t){console.log(this),this.isTouch=!0,this.touch.move.x=t.screenX,this.touch.move.y=t.screenY}mouseUp(t){this.isTouch=!1}mouseMove(t){if(!this.isTouch)return;let h={width:window.innerWidth,height:window.innerHeight};this.element!==window&&(h={width:this.element.clientWidth,height:this.element.clientHeight}),this.touch.delta={x:t.screenX-this.touch.move.x,y:t.screenY-this.touch.move.y},console.log("delta",this.touch.delta),this.touch.move={x:t.screenX,y:t.screenY};let i=h.width/h.height,o=Math.PI/180,e=Math.PI/2;this.touch.yaw+=this.touch.delta.x/h.width*45*i*o,this.touch.pitch+=this.touch.delta.y/h.height*45*o,this.touch.pitch=Math.max(-e,Math.min(e,this.touch.pitch)),console.log("y yaw",this.touch.yaw),console.log("x pitch",this.touch.pitch)}}class i{constructor(t){this.element=t||window,this.isTouch=!1,this.isPinch=!1,this.touch={delta:{},move:{},pinch:{}},this.touchDown=this.touchDown.bind(this),this.touchUp=this.touchUp.bind(this),this.touchMove=this.touchMove.bind(this),this.init()}init(){console.log("init"),this.element.addEventListener("touchstart",this.touchDown),window.addEventListener("touchend",this.touchUp),window.addEventListener("touchmove",this.touchMove),this.isTouch=!1}touchDown(t){if(console.log("touch start"),this.isTouch=!0,t.touches.length>1)return this.touch.pinch.x=t.touches[0].pageX-t.touches[1].pageX,this.touch.pinch.y=t.touches[0].pageY-t.touches[1].pageY,void(this.touch.pinch.start=Math.sqrt(this.touch.pinch.x*this.touch.pinch.x+this.touch.pinch.y*this.touch.pinch.y));this.touch.move.x=t.touches[0].pageX,this.touch.move.y=t.touches[0].pageY,console.log("touch move",this.touch.move)}touchUp(t){console.log("touch end"),this.isTouch=!1,this.isPinch=!1}touchMove(t){if(!this.isTouch)return;if(t.touches.length>1)return this.touch.pinch.x=t.touches[0].pageX-t.touches[1].pageX,this.touch.pinch.y=t.touches[0].pageY-t.touches[1].pageY,this.touch.pinch.end=Math.sqrt(this.touch.pinch.x*this.touch.pinch.x+this.touch.pinch.y*this.touch.pinch.y),this.touch.pinch.zoom=this.touch.pinch.start/this.touch.pinch.end,void(this.isPinch=!0);let h={width:window.innerWidth,height:window.innerHeight};this.element!==window&&(h={width:this.element.clientWidth,height:this.element.clientHeight}),this.touch.move={x:t.touches[0].pageX,y:t.touches[0].pageY},console.log("move ",this.touch.move)}}t.Desktop=h,t.Mobile=i,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG91Y2hDb250cm9sLmpzIiwic291cmNlcyI6WyIuLi9zcmMvY29yZS9EZXNrdG9wLmpzIiwiLi4vc3JjL2NvcmUvTW9iaWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBEZXNrdG9wIHtcbiAgICAgXG4gICAgY29uc3RydWN0b3IoZWxlbWVudCl7XG4gICAgICAgIFxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50IHx8IHdpbmRvdztcbiAgICAgICAgdGhpcy5pc1RvdWNoID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy50b3VjaCA9IHtcbiAgICAgICAgICAgIGRlbHRhIDoge30sXG4gICAgICAgICAgICBtb3ZlICA6IHt9LFxuICAgICAgICAgICAgcGl0Y2ggOiAwLFxuICAgICAgICAgICAgeWF3ICAgOiAwXG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICB0aGlzLm1vdXNlRG93biA9IHRoaXMubW91c2VEb3duLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMubW91c2VVcCAgID0gdGhpcy5tb3VzZVVwLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMubW91c2VNb3ZlID0gdGhpcy5tb3VzZU1vdmUuYmluZCh0aGlzKTtcblxuICAgICAgICB0aGlzLmluaXQoKTtcbiAgICB9XG5cblxuICAgIGluaXQoKXtcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ2luaXQnKTtcbiAgICAgICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMubW91c2VEb3duKTtcbiAgICAgICAgXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5tb3VzZVVwKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMubW91c2VNb3ZlKTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuaXNUb3VjaCA9IGZhbHNlO1xuICAgIH1cblxuICAgIG1vdXNlRG93bihlKXtcbiAgICAgICAgY29uc29sZS5sb2codGhpcyk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdtb3VzZSBkb3duJyk7XG5cbiAgICAgICAgdGhpcy5pc1RvdWNoICA9IHRydWU7XG5cbiAgICAgICAgdGhpcy50b3VjaC5tb3ZlLnggPSBlLnNjcmVlblg7XG4gICAgICAgIHRoaXMudG91Y2gubW92ZS55ID0gZS5zY3JlZW5ZO1xuICAgIH1cblxuICAgIG1vdXNlVXAoZSl7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdtb3VzZSB1cCcpO1xuXG4gICAgICAgIHRoaXMuaXNUb3VjaCA9IGZhbHNlO1xuXG4gICAgfVxuXG4gICAgbW91c2VNb3ZlKGUpe1xuICAgICAgICBpZighdGhpcy5pc1RvdWNoKSByZXR1cm47XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdtb3VzZSBtb3ZlJyk7XG5cbiAgICAgICAgbGV0IHNjcmVlbiA9IHtcbiAgICAgICAgICAgIHdpZHRoICA6IHdpbmRvdy5pbm5lcldpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0IDogd2luZG93LmlubmVySGVpZ2h0XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYodGhpcy5lbGVtZW50ICE9PSB3aW5kb3cpIHNjcmVlbiA9IHtcbiAgICAgICAgICAgIHdpZHRoICA6IHRoaXMuZWxlbWVudC5jbGllbnRXaWR0aCxcbiAgICAgICAgICAgIGhlaWdodCA6IHRoaXMuZWxlbWVudC5jbGllbnRIZWlnaHRcbiAgICAgICAgfTtcblxuXG4gICAgICAgIHRoaXMudG91Y2guZGVsdGEgPSB7XG4gICAgICAgICAgICB4IDogZS5zY3JlZW5YIC0gdGhpcy50b3VjaC5tb3ZlLngsXG4gICAgICAgICAgICB5IDogZS5zY3JlZW5ZIC0gdGhpcy50b3VjaC5tb3ZlLnlcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zb2xlLmxvZygnZGVsdGEnLCB0aGlzLnRvdWNoLmRlbHRhKTtcblxuICAgICAgICB0aGlzLnRvdWNoLm1vdmUgPSB7XG4gICAgICAgICAgICB4IDogZS5zY3JlZW5YLFxuICAgICAgICAgICAgeSA6IGUuc2NyZWVuWVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdtb3ZlICcsIHRoaXMudG91Y2gubW92ZSk7XG5cbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3NjcmVlbiAnLCBzY3JlZW4pXG5cbiAgICAgICAgbGV0IFxuICAgICAgICAgICAgZm92ICAgID0gNDUsXG4gICAgICAgICAgICBhc3BlY3QgPSBzY3JlZW4ud2lkdGggLyBzY3JlZW4uaGVpZ2h0LFxuICAgICAgICAgICAgcmFkaWFuID0gTWF0aC5QSS8xODAsXG4gICAgICAgICAgICBoYWxmICAgPSBNYXRoLlBJLzI7XG5cbiAgICAgICAgdGhpcy50b3VjaC55YXcgICArPSB0aGlzLnRvdWNoLmRlbHRhLnggLyBzY3JlZW4ud2lkdGggKiBmb3YgKiBhc3BlY3QgKiByYWRpYW47XG4gICAgICAgIFxuICAgICAgICB0aGlzLnRvdWNoLnBpdGNoICs9IHRoaXMudG91Y2guZGVsdGEueSAvIHNjcmVlbi5oZWlnaHQgKiBmb3YgKiByYWRpYW47XG4gICAgICAgIHRoaXMudG91Y2gucGl0Y2ggID0gTWF0aC5tYXgoLWhhbGYsIE1hdGgubWluKGhhbGYsIHRoaXMudG91Y2gucGl0Y2gpKTtcblxuICAgICAgICBjb25zb2xlLmxvZygneSB5YXcnLCB0aGlzLnRvdWNoLnlhdyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCd4IHBpdGNoJywgdGhpcy50b3VjaC5waXRjaCk7XG4gICAgfVxuXG59XG4iLCJleHBvcnQgY2xhc3MgTW9iaWxlIHtcbiAgICBcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50KXtcblxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50IHx8IHdpbmRvdztcbiAgICAgICAgdGhpcy5pc1RvdWNoID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNQaW5jaCA9IGZhbHNlO1xuIFxuICAgICAgICB0aGlzLnRvdWNoID0ge1xuICAgICAgICAgICAgZGVsdGEgOiB7fSxcbiAgICAgICAgICAgIG1vdmUgIDoge30sXG4gICAgICAgICAgICBwaW5jaCA6IHt9XG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy50b3VjaERvd24gPSB0aGlzLnRvdWNoRG93bi5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnRvdWNoVXAgICA9IHRoaXMudG91Y2hVcC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnRvdWNoTW92ZSA9IHRoaXMudG91Y2hNb3ZlLmJpbmQodGhpcyk7XG5cbiAgICAgICAgdGhpcy5pbml0KCk7ICAgICAgICBcbiAgICAgICAgXG4gICAgfVxuXG5cbiAgICBpbml0KCl7XG4gICAgICAgIGNvbnNvbGUubG9nKCdpbml0Jyk7XG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy50b3VjaERvd24pO1xuXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMudG91Y2hVcCk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLnRvdWNoTW92ZSk7XG5cbiAgICAgICAgdGhpcy5pc1RvdWNoID0gZmFsc2U7ICAgICAgICBcblxuICAgIH1cblxuICAgIHRvdWNoRG93bihlKXtcbiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCd0b3VjaCBzdGFydCcpO1xuXG4gICAgICAgIHRoaXMuaXNUb3VjaCA9IHRydWU7XG5cbiAgICAgICAgaWYoZS50b3VjaGVzLmxlbmd0aCA+IDEpe1xuXG4gICAgICAgICAgICB0aGlzLnRvdWNoLnBpbmNoLnggPSBlLnRvdWNoZXNbMF0ucGFnZVggLSBlLnRvdWNoZXNbMV0ucGFnZVg7XG4gICAgICAgICAgICB0aGlzLnRvdWNoLnBpbmNoLnkgPSBlLnRvdWNoZXNbMF0ucGFnZVkgLSBlLnRvdWNoZXNbMV0ucGFnZVk7XG4gXG4gICAgICAgICAgICB0aGlzLnRvdWNoLnBpbmNoLnN0YXJ0ID0gTWF0aC5zcXJ0KHRoaXMudG91Y2gucGluY2gueCAqIHRoaXMudG91Y2gucGluY2gueCArIHRoaXMudG91Y2gucGluY2gueSAqIHRoaXMudG91Y2gucGluY2gueSk7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygncGluY2ggc3RhcnQnICx0aGlzLnRvdWNoLnBpbmNoLnN0YXJ0KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBcblxuICAgICAgICB0aGlzLnRvdWNoLm1vdmUueCA9IGUudG91Y2hlc1swXS5wYWdlWDtcbiAgICAgICAgdGhpcy50b3VjaC5tb3ZlLnkgPSBlLnRvdWNoZXNbMF0ucGFnZVk7XG4gICAgICAgIGNvbnNvbGUubG9nKCd0b3VjaCBtb3ZlJywgdGhpcy50b3VjaC5tb3ZlKTtcbiAgICB9XG5cbiAgICB0b3VjaFVwKGUpeyBcbiAgICAgICAgY29uc29sZS5sb2coJ3RvdWNoIGVuZCcpO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5pc1RvdWNoID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNQaW5jaCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHRvdWNoTW92ZShlKXtcbiAgICAgICAgaWYoIXRoaXMuaXNUb3VjaCkgcmV0dXJuOyAgIFxuICAgICAgICAvLyBjb25zb2xlLmxvZygndG91Y2ggbW92ZScpO1xuXG4gICAgICAgIGlmKGUudG91Y2hlcy5sZW5ndGggPiAxKXtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy50b3VjaC5waW5jaC54ID0gZS50b3VjaGVzWzBdLnBhZ2VYIC0gZS50b3VjaGVzWzFdLnBhZ2VYO1xuICAgICAgICAgICAgdGhpcy50b3VjaC5waW5jaC55ID0gZS50b3VjaGVzWzBdLnBhZ2VZIC0gZS50b3VjaGVzWzFdLnBhZ2VZO1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ3BpbmNoICcgLHRoaXMudG91Y2gucGluY2gpO1xuXG4gICAgICAgICAgICB0aGlzLnRvdWNoLnBpbmNoLmVuZCA9IE1hdGguc3FydCh0aGlzLnRvdWNoLnBpbmNoLnggKiB0aGlzLnRvdWNoLnBpbmNoLnggKyB0aGlzLnRvdWNoLnBpbmNoLnkgKiB0aGlzLnRvdWNoLnBpbmNoLnkpO1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ3BpbmNoIGVuZCAnICx0aGlzLnRvdWNoLnBpbmNoLmVuZCk7XG5cblxuICAgICAgICAgICAgdGhpcy50b3VjaC5waW5jaC56b29tID0gdGhpcy50b3VjaC5waW5jaC5zdGFydCAvIHRoaXMudG91Y2gucGluY2guZW5kO1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ3BpbmNoIHpvb20nLCB0aGlzLnRvdWNoLnBpbmNoLnpvb20pO1xuXG4gICAgICAgICAgICB0aGlzLmlzUGluY2ggPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHNjcmVlbiA9IHtcbiAgICAgICAgICAgIHdpZHRoICA6IHdpbmRvdy5pbm5lcldpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0IDogd2luZG93LmlubmVySGVpZ2h0XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYodGhpcy5lbGVtZW50ICE9PSB3aW5kb3cpIHNjcmVlbiA9IHtcbiAgICAgICAgICAgIHdpZHRoICA6IHRoaXMuZWxlbWVudC5jbGllbnRXaWR0aCxcbiAgICAgICAgICAgIGhlaWdodCA6IHRoaXMuZWxlbWVudC5jbGllbnRIZWlnaHRcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLnRvdWNoLm1vdmUgPSB7XG4gICAgICAgICAgICB4IDogZS50b3VjaGVzWzBdLnBhZ2VYLFxuICAgICAgICAgICAgeSA6IGUudG91Y2hlc1swXS5wYWdlWVxuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnNvbGUubG9nKCdtb3ZlICcsIHRoaXMudG91Y2gubW92ZSk7ICAgICAgICBcblxuICAgICAgICAvLyBjb25zb2xlLmxvZygnc2NyZWVuICcsIHNjcmVlbik7ICAgICAgICBcblxuICAgIH1cblxufVxuXG4gICJdLCJuYW1lcyI6WyJEZXNrdG9wIiwiW29iamVjdCBPYmplY3RdIiwiZWxlbWVudCIsInRoaXMiLCJ3aW5kb3ciLCJpc1RvdWNoIiwidG91Y2giLCJkZWx0YSIsIm1vdmUiLCJwaXRjaCIsInlhdyIsIm1vdXNlRG93biIsImJpbmQiLCJtb3VzZVVwIiwibW91c2VNb3ZlIiwiaW5pdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiY29uc29sZSIsImxvZyIsIngiLCJzY3JlZW5YIiwieSIsInNjcmVlblkiLCJzY3JlZW4iLCJ3aWR0aCIsImlubmVyV2lkdGgiLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiYXNwZWN0IiwicmFkaWFuIiwiTWF0aCIsIlBJIiwiaGFsZiIsIm1heCIsIm1pbiIsIk1vYmlsZSIsImlzUGluY2giLCJwaW5jaCIsInRvdWNoRG93biIsInRvdWNoVXAiLCJ0b3VjaE1vdmUiLCJ0b3VjaGVzIiwibGVuZ3RoIiwicGFnZVgiLCJwYWdlWSIsInN0YXJ0Iiwic3FydCIsImVuZCIsInpvb20iXSwibWFwcGluZ3MiOiJxTkFBYUEsRUFFVEMsWUFBWUMsR0FFUkMsS0FBS0QsUUFBVUEsR0FBV0UsT0FDMUJELEtBQUtFLFNBQVUsRUFFZkYsS0FBS0csT0FDREMsU0FDQUMsUUFDQUMsTUFBUSxFQUNSQyxJQUFRLEdBR1pQLEtBQUtRLFVBQVlSLEtBQUtRLFVBQVVDLEtBQUtULE1BQ3JDQSxLQUFLVSxRQUFZVixLQUFLVSxRQUFRRCxLQUFLVCxNQUNuQ0EsS0FBS1csVUFBWVgsS0FBS1csVUFBVUYsS0FBS1QsTUFFckNBLEtBQUtZLE9BSVRkLE9BRUlFLEtBQUtELFFBQVFjLGlCQUFpQixZQUFhYixLQUFLUSxXQUVoRFAsT0FBT1ksaUJBQWlCLFVBQVdiLEtBQUtVLFNBQ3hDVCxPQUFPWSxpQkFBaUIsWUFBYWIsS0FBS1csV0FFMUNYLEtBQUtFLFNBQVUsRUFHbkJKLFVBQVVnQixHQUNOQyxRQUFRQyxJQUFJaEIsTUFHWkEsS0FBS0UsU0FBVyxFQUVoQkYsS0FBS0csTUFBTUUsS0FBS1ksRUFBSUgsRUFBRUksUUFDdEJsQixLQUFLRyxNQUFNRSxLQUFLYyxFQUFJTCxFQUFFTSxRQUcxQnRCLFFBQVFnQixHQUdKZCxLQUFLRSxTQUFVLEVBSW5CSixVQUFVZ0IsR0FDTixJQUFJZCxLQUFLRSxRQUFTLE9BR2xCLElBQUltQixHQUNBQyxNQUFTckIsT0FBT3NCLFdBQ2hCQyxPQUFTdkIsT0FBT3dCLGFBR2pCekIsS0FBS0QsVUFBWUUsU0FBUW9CLEdBQ3hCQyxNQUFTdEIsS0FBS0QsUUFBUTJCLFlBQ3RCRixPQUFTeEIsS0FBS0QsUUFBUTRCLGVBSTFCM0IsS0FBS0csTUFBTUMsT0FDUGEsRUFBSUgsRUFBRUksUUFBVWxCLEtBQUtHLE1BQU1FLEtBQUtZLEVBQ2hDRSxFQUFJTCxFQUFFTSxRQUFVcEIsS0FBS0csTUFBTUUsS0FBS2MsR0FHcENKLFFBQVFDLElBQUksUUFBU2hCLEtBQUtHLE1BQU1DLE9BRWhDSixLQUFLRyxNQUFNRSxNQUNQWSxFQUFJSCxFQUFFSSxRQUNOQyxFQUFJTCxFQUFFTSxTQU9WLElBRUlRLEVBQVNQLEVBQU9DLE1BQVFELEVBQU9HLE9BQy9CSyxFQUFTQyxLQUFLQyxHQUFHLElBQ2pCQyxFQUFTRixLQUFLQyxHQUFHLEVBRXJCL0IsS0FBS0csTUFBTUksS0FBU1AsS0FBS0csTUFBTUMsTUFBTWEsRUFBSUksRUFBT0MsTUFMbkMsR0FLaURNLEVBQVNDLEVBRXZFN0IsS0FBS0csTUFBTUcsT0FBU04sS0FBS0csTUFBTUMsTUFBTWUsRUFBSUUsRUFBT0csT0FQbkMsR0FPa0RLLEVBQy9EN0IsS0FBS0csTUFBTUcsTUFBU3dCLEtBQUtHLEtBQUtELEVBQU1GLEtBQUtJLElBQUlGLEVBQU1oQyxLQUFLRyxNQUFNRyxRQUU5RFMsUUFBUUMsSUFBSSxRQUFTaEIsS0FBS0csTUFBTUksS0FDaENRLFFBQVFDLElBQUksVUFBV2hCLEtBQUtHLE1BQU1HLGNDNUY3QjZCLEVBRVRyQyxZQUFZQyxHQUVSQyxLQUFLRCxRQUFVQSxHQUFXRSxPQUMxQkQsS0FBS0UsU0FBVSxFQUNmRixLQUFLb0MsU0FBVSxFQUVmcEMsS0FBS0csT0FDREMsU0FDQUMsUUFDQWdDLFVBR0pyQyxLQUFLc0MsVUFBWXRDLEtBQUtzQyxVQUFVN0IsS0FBS1QsTUFDckNBLEtBQUt1QyxRQUFZdkMsS0FBS3VDLFFBQVE5QixLQUFLVCxNQUNuQ0EsS0FBS3dDLFVBQVl4QyxLQUFLd0MsVUFBVS9CLEtBQUtULE1BRXJDQSxLQUFLWSxPQUtUZCxPQUNJaUIsUUFBUUMsSUFBSSxRQUNaaEIsS0FBS0QsUUFBUWMsaUJBQWlCLGFBQWNiLEtBQUtzQyxXQUVqRHJDLE9BQU9ZLGlCQUFpQixXQUFZYixLQUFLdUMsU0FDekN0QyxPQUFPWSxpQkFBaUIsWUFBYWIsS0FBS3dDLFdBRTFDeEMsS0FBS0UsU0FBVSxFQUluQkosVUFBVWdCLEdBTU4sR0FKQUMsUUFBUUMsSUFBSSxlQUVaaEIsS0FBS0UsU0FBVSxFQUVaWSxFQUFFMkIsUUFBUUMsT0FBUyxFQU9sQixPQUxBMUMsS0FBS0csTUFBTWtDLE1BQU1wQixFQUFJSCxFQUFFMkIsUUFBUSxHQUFHRSxNQUFRN0IsRUFBRTJCLFFBQVEsR0FBR0UsTUFDdkQzQyxLQUFLRyxNQUFNa0MsTUFBTWxCLEVBQUlMLEVBQUUyQixRQUFRLEdBQUdHLE1BQVE5QixFQUFFMkIsUUFBUSxHQUFHRyxXQUV2RDVDLEtBQUtHLE1BQU1rQyxNQUFNUSxNQUFRZixLQUFLZ0IsS0FBSzlDLEtBQUtHLE1BQU1rQyxNQUFNcEIsRUFBSWpCLEtBQUtHLE1BQU1rQyxNQUFNcEIsRUFBSWpCLEtBQUtHLE1BQU1rQyxNQUFNbEIsRUFBSW5CLEtBQUtHLE1BQU1rQyxNQUFNbEIsSUFNdkhuQixLQUFLRyxNQUFNRSxLQUFLWSxFQUFJSCxFQUFFMkIsUUFBUSxHQUFHRSxNQUNqQzNDLEtBQUtHLE1BQU1FLEtBQUtjLEVBQUlMLEVBQUUyQixRQUFRLEdBQUdHLE1BQ2pDN0IsUUFBUUMsSUFBSSxhQUFjaEIsS0FBS0csTUFBTUUsTUFHekNQLFFBQVFnQixHQUNKQyxRQUFRQyxJQUFJLGFBRVpoQixLQUFLRSxTQUFVLEVBQ2ZGLEtBQUtvQyxTQUFVLEVBR25CdEMsVUFBVWdCLEdBQ04sSUFBSWQsS0FBS0UsUUFBUyxPQUdsQixHQUFHWSxFQUFFMkIsUUFBUUMsT0FBUyxFQWNsQixPQVpBMUMsS0FBS0csTUFBTWtDLE1BQU1wQixFQUFJSCxFQUFFMkIsUUFBUSxHQUFHRSxNQUFRN0IsRUFBRTJCLFFBQVEsR0FBR0UsTUFDdkQzQyxLQUFLRyxNQUFNa0MsTUFBTWxCLEVBQUlMLEVBQUUyQixRQUFRLEdBQUdHLE1BQVE5QixFQUFFMkIsUUFBUSxHQUFHRyxNQUd2RDVDLEtBQUtHLE1BQU1rQyxNQUFNVSxJQUFNakIsS0FBS2dCLEtBQUs5QyxLQUFLRyxNQUFNa0MsTUFBTXBCLEVBQUlqQixLQUFLRyxNQUFNa0MsTUFBTXBCLEVBQUlqQixLQUFLRyxNQUFNa0MsTUFBTWxCLEVBQUluQixLQUFLRyxNQUFNa0MsTUFBTWxCLEdBSWpIbkIsS0FBS0csTUFBTWtDLE1BQU1XLEtBQU9oRCxLQUFLRyxNQUFNa0MsTUFBTVEsTUFBUTdDLEtBQUtHLE1BQU1rQyxNQUFNVSxTQUdsRS9DLEtBQUtvQyxTQUFVLEdBSW5CLElBQUlmLEdBQ0FDLE1BQVNyQixPQUFPc0IsV0FDaEJDLE9BQVN2QixPQUFPd0IsYUFHakJ6QixLQUFLRCxVQUFZRSxTQUFRb0IsR0FDeEJDLE1BQVN0QixLQUFLRCxRQUFRMkIsWUFDdEJGLE9BQVN4QixLQUFLRCxRQUFRNEIsZUFHMUIzQixLQUFLRyxNQUFNRSxNQUNQWSxFQUFJSCxFQUFFMkIsUUFBUSxHQUFHRSxNQUNqQnhCLEVBQUlMLEVBQUUyQixRQUFRLEdBQUdHLE9BR3JCN0IsUUFBUUMsSUFBSSxRQUFTaEIsS0FBS0csTUFBTUUifQ==
