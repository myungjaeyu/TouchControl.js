!function(t,h){"object"==typeof exports&&"undefined"!=typeof module?h(exports):"function"==typeof define&&define.amd?define(["exports"],h):h(t.TouchControl=t.TouchControl||{})}(this,function(t){"use strict";class h{constructor(t){this.element=t||window,this.isTouch=!1,this.isMove=!1,this.touch={delta:{},move:{},pitch:0,yaw:0,type:"",direction:{north:!1,south:!1,east:!1,west:!1}},this.mouseDown=this.mouseDown.bind(this),this.mouseUp=this.mouseUp.bind(this),this.mouseMove=this.mouseMove.bind(this),this._gesture={type:"",count:0},this.init()}init(){this.element.addEventListener("mousedown",this.mouseDown),window.addEventListener("mouseup",this.mouseUp),window.addEventListener("mousemove",this.mouseMove),this.isTouch=!1}mouseDown(t){this.isTouch=!0,this.touch.move.x=t.clientX,this.touch.move.y=t.clientY}mouseUp(t){this.isTouch=!1,this.isMove=!1,this.touch.direction={north:!1,south:!1,east:!1,west:!1},this._gesture={type:"",count:0}}mouseMove(t){if(!this.isTouch)return;this.isMove=!0;let h={width:window.innerWidth,height:window.innerHeight};this.element!==window&&(h={width:this.element.clientWidth,height:this.element.clientHeight}),this.touch.delta={x:t.clientX-this.touch.move.x,y:t.clientY-this.touch.move.y},this.touch.delta.y>0?(()=>{this.touch.direction.south=!0;this.touch.direction.north=!1})():(()=>{this.touch.direction.north=!0;this.touch.direction.south=!1})(),this.touch.delta.x>0?(()=>{this.touch.direction.east=!0;this.touch.direction.west=!1})():(()=>{this.touch.direction.west=!0;this.touch.direction.east=!1})();let i=[],e="";Object.keys(this.touch.direction).map(t=>{this.touch.direction[t]&&i.push(t)}),i.length>1&&(e=Math.abs(this.touch.delta.y)>Math.abs(this.touch.delta.x)?i[0]:i[1]),this._gesture.type===e?5===++this._gesture.count&&(this.touch.type=e):this._gesture.count=0,this._gesture.type=e,this.touch.move={x:t.clientX,y:t.clientY};let o=h.width/h.height,s=Math.PI/180,c=Math.PI/2;this.touch.yaw+=this.touch.delta.x/h.width*45*o*s,this.touch.pitch+=this.touch.delta.y/h.height*45*s,this.touch.pitch=Math.max(-c,Math.min(c,this.touch.pitch))}}class i{constructor(t){this.element=t||window,this.isTouch=!1,this.isMove=!1,this.isPinch=!1,this.touch={delta:{},move:{},pinch:{},pitch:0,yaw:0,type:"",direction:{north:!1,south:!1,east:!1,west:!1}},this.touchDown=this.touchDown.bind(this),this.touchUp=this.touchUp.bind(this),this.touchMove=this.touchMove.bind(this),this.init()}init(){this.element.addEventListener("touchstart",this.touchDown),window.addEventListener("touchend",this.touchUp),window.addEventListener("touchmove",this.touchMove),this.isTouch=!1}touchDown(t){if(this.isTouch=!0,t.touches.length>1)return this.touch.pinch.x=t.touches[0].pageX-t.touches[1].pageX,this.touch.pinch.y=t.touches[0].pageY-t.touches[1].pageY,void(this.touch.pinch.start=Math.sqrt(this.touch.pinch.x*this.touch.pinch.x+this.touch.pinch.y*this.touch.pinch.y));this.touch.move.x=t.touches[0].pageX,this.touch.move.y=t.touches[0].pageY}touchUp(t){if(this.isMove){let t=[];Object.keys(this.touch.direction).map(h=>{this.touch.direction[h]&&t.push(h)}),t.length>1&&(this.touch.type=Math.abs(this.touch.delta.y)>Math.abs(this.touch.delta.x)?t[0]:t[1]),this.isMove=!1}this.isTouch=!1,this.isPinch=!1,this.touch.direction={north:!1,south:!1,east:!1,west:!1}}touchMove(t){if(!this.isTouch)return;if(t.touches.length>1)return this.touch.pinch.x=t.touches[0].pageX-t.touches[1].pageX,this.touch.pinch.y=t.touches[0].pageY-t.touches[1].pageY,this.touch.pinch.end=Math.sqrt(this.touch.pinch.x*this.touch.pinch.x+this.touch.pinch.y*this.touch.pinch.y),this.touch.pinch.zoom=this.touch.pinch.start/this.touch.pinch.end,this.touch.type="pinch",void(this.isPinch=!0);this.isMove=!0;let h={width:window.innerWidth,height:window.innerHeight};this.element!==window&&(h={width:this.element.clientWidth,height:this.element.clientHeight}),this.touch.delta={x:parseInt(t.touches[0].pageX-this.touch.move.x),y:parseInt(t.touches[0].pageY-this.touch.move.y)},Math.abs(this.touch.delta.y)>1&&(this.touch.delta.y>0?(()=>{this.touch.direction.south=!0;this.touch.direction.north=!1})():(()=>{this.touch.direction.north=!0;this.touch.direction.south=!1})()),Math.abs(this.touch.delta.x)>1&&(this.touch.delta.x>0?(()=>{this.touch.direction.east=!0;this.touch.direction.west=!1})():(()=>{this.touch.direction.west=!0;this.touch.direction.east=!1})()),this.touch.move={x:t.touches[0].pageX,y:t.touches[0].pageY};let i=h.width/h.height,e=Math.PI/180,o=Math.PI/2;this.touch.yaw+=this.touch.delta.x/h.width*45*i*e,this.touch.pitch+=this.touch.delta.y/h.height*45*e,this.touch.pitch=Math.max(-o,Math.min(o,this.touch.pitch))}}t.Desktop=h,t.Mobile=i,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
